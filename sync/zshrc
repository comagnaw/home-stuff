# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/msieger/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="spaceship"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=( kubectl golang git zsh-autosuggestions history-substring-search zsh-syntax-highlighting)

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=white'

source $ZSH/oh-my-zsh.sh

# User configuration
export EDITOR=vim

export GOPATH="$HOME/repos"
export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/opt/openssl/bin:$PATH:~/home/bin:$GOPATH/bin"

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias repo='cd ~/repos/src/github.com'
alias sublime='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'
alias vol0="ssh serviceadmin@vol0"
alias worker0="ssh serviceadmin@worker0"
alias worker1="ssh serviceadmin@worker1"
alias ns1="ssh serviceadmin@ns1"
alias ns2="ssh serviceadmin@ns2"
alias volnfs="sshfs workers@vol0:/share ~/nfs -o allow_other,default_permissions,IdentityFile=~/.ssh/workers,idmap=file,uidfile=.nfs_config/vol0_uid_map,nomap=ignore -C"

function sclist() { screen -list; }
function sckill() { screen -X -S ${1} quit; }
function gitco() { git log | grep Date | awk '{print " : "$4" "$3" "$6}' | uniq -c; }

function sync2git() {
    	cp ~/.zshrc ~/home/sync/zshrc
	cp ~/.bash_profile ~/home/sync/bash_profile
	cp ~/.bashrc ~/home/sync/bashrc
	cp ~/.vimrc ~/home/sync/vimrc
	cp ~/.screenrc ~/home/sync/screenrc_xterm-color
	cp ~/.git-completion.bash ~/home/sync/git-completion.bash
	cp ~/.powerline-shell.json ~/home/sync/powerline-shell.json
	cp ~/.gitconfig ~/home/sync/gitconfig
	cp ~/.pylintrc ~/home/sync/pylintrc

	if [[ ${1} == 'git_include' ]]; then
    		cp ~/.gitconfig_include ~/home/sync/gitconfig_include
	fi
}

function sync2home() {
	cp ~/home/sync/bash_profile ~/.bash_profile
	cp ~/home/sync/bashrc ~/.bashrc
	cp ~/home/sync/vimrc ~/.vimrc
	cp ~/home/sync/screenrc_xterm-color ~/.screenrc
	cp ~/home/sync/git-completion.bash ~/.git-completion.bash
	cp ~/home/sync/powerline-shell.json ~/.powerline-shell.json
	cp ~/home/sync/gitconfig ~/.gitconfig
	cp ~/home/sync/pylintrc ~/.pylintrc

	cp ~/home/sync/homebrew.simonsimcity.update-notifier.plist ~/Library/LaunchAgents

	if [[ ${1} == 'git_include' ]]; then
    		cp ~/home/sync/gitconfig_include ~/.gitconfig_include
	fi
}

# Spaceship config
SPACESHIP_DIR_TRUNC=3
SPACESHIP_PROMPT_ADD_NEWLINE=true
SPACESHIP_PROMPT_SEPARATE_LINE=true
SPACESHIP_CHAR_SYMBOL="$ "
SPACESHIP_CHAR_SYMBOL_ROOT="# "
SPACESHIP_CHAR_SYMBOL_SECONDARY="$ "	
SPACESHIP_HG_SHOW=false
SPACESHIP_HG_BRANCH_SHOW=false
SPACESHIP_HG_STATUS_SHOW=false
SPACESHIP_PACKAGE_SHOW=false
SPACESHIP_NODE_SHOW=false
SPACESHIP_RUBY_SHOW=false
SPACESHIP_ELM_SHOW=false
SPACESHIP_XCODE_SHOW_LOCAL=false
SPACESHIP_SWIFT_SHOW_LOCAL=false
SPACESHIP_GOLANG_SHOW=true
SPACESHIP_PHP_SHOW=false
SPACESHIP_RUST_SHOW=false
SPACESHIP_HASKELL_SHOW=false
SPACESHIP_JULIA_SHOW=false
SPACESHIP_DOCKER_SHOW=true
SPACESHIP_DOCKER_CONTEXT_SHOW=false
SPACESHIP_AWS_SHOW=false
SPACESHIP_VENV_SHOW=true
SPACESHIP_CONDA_SHOW=false
SPACESHIP_PYENV_SHOW=true
SPACESHIP_DOTNET_SHOW=false
SPACESHIP_EMBER_SHOW=false
SPACESHIP_KUBECTL_SHOW=true
SPACESHIP_KUBECONTEXT_SHOW=false
SPACESHIP_TERRAFORM_SHOW=false
SPACESHIP_EXEC_TIME_SHOW=true
SPACESHIP_BATTERY_SHOW=false
SPACESHIP_VI_MODE_SHOW=false
SPACESHIP_JOBS_SHOW=false
SPACESHIP_EXIT_CODE_SHOW=true
SPACESHIP_USER_SHOW=always
SPACESHIP_HOST_SHOW=always
SPACESHIP_TIME_SHOW=true
SPACESHIP_VENV_PREFIX="on "
SPACESHIP_PYENV_PREFIX=""
SPACESHIP_PYENV_SYMBOL="python "
SPACESHIP_GOLANG_PREFIX=""
SPACESHIP_GOLANG_SYMBOL="go "

SPACESHIP_PROMPT_ORDER=(time exec_time line_sep docker kubectl user host dir git line_sep golang pyenv venv line_sep char)

# Set up pyenv/virtualenvwrapper
eval "$(pyenv init -)"
export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
export WORKON_HOME=$HOME/.pyenvs
pyenv virtualenvwrapper_lazy

# Set up GPG
GPG_TTY=$(tty)
export GPG_TTY
